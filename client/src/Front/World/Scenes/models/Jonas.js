/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Jonas(props) {
  const group = useRef();
  const audioRef = useRef(); // Referencia al elemento de audio
  const { nodes, materials, animations } = useGLTF("/assets/models/Hijo/boyJonas.glb");
  const { actions } = useAnimations(animations, group);
  const [rotationx, setRotationx] = useState(0);
  const [rotationz, setRotationz] = useState(0);
  const [rotationy, setRotationy] = useState(0);
  const [positionx, setPositionX] = useState(0);
  const [positiony, setPositionY] = useState(0);
  const [positionz, setPositionZ] = useState(0);
  const [scaleJonas, setScale] = useState(2);

  useFrame(() => {
    if (props.animation === 5) {
      setPositionX((prevX) => prevX + 0.3);
    }
  });

  useEffect(() => {
    for (const key in actions) {
      actions[key].stop();
    }

    if (props.animation === 5) {
      setPositionZ(-18)
      setPositionX(-10)
      setPositionY(-2)
      setRotationy( Math.PI * 2.5 )
      setScale(1)
      console.log(animations)

    const action = actions["Running"];
    action.play();
    }


    if (props.animation === 8) {
      setPositionZ(-18)
      setPositionX(-10)
      setPositionY(0)
      setRotationy( Math.PI * 4 )
      setScale(1)

    const action = actions["Clapping"];
    action.play();
    } else {
      setScale(2)
    }

    if (props.animation === 12) {
      setPositionZ(-10)
      setPositionX(2)
      setPositionY(-3)
      setRotationy( Math.PI * 3.9 )

    const action = actions["Clapping"];
    action.play();
    }

    if (props.animation === 13) {
        setPositionZ(-6)
        setPositionX(1)
        setPositionY(-3.9)
        setRotationy( Math.PI * 4.2 )
  
      const action = actions["Dancing"];
      action.play();
    }
    if (props.animation === 66) {
      setPositionZ(-6)
        setPositionX(1)
        setPositionY(-3.9)
        setRotationy( Math.PI * 4.2 )
      const action = actions["Dancing"];
      action.play();
    setScale(2)
  }}, [props.animation]);

  return (
    <group ref={group} {...props} dispose={null}
    rotation-x={rotationx}
    rotation-z={rotationz}
    rotation-y={rotationy}
    position-x={positionx}
    position-z={positionz}
    position-y={positiony} 
    scale={scaleJonas}
    >
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="body_skin1_0"
            geometry={nodes.body_skin1_0.geometry}
            material={materials.skin1}
            skeleton={nodes.body_skin1_0.skeleton}
          />
          <skinnedMesh
            name="EyebrowL_hair_m_0"
            geometry={nodes.EyebrowL_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.EyebrowL_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="EyebrowR_hair_m_0"
            geometry={nodes.EyebrowR_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.EyebrowR_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="Group64930_hair_m_0"
            geometry={nodes.Group64930_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.Group64930_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="Group64932_hair_m_0"
            geometry={nodes.Group64932_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.Group64932_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64926_hair_m_0"
            geometry={nodes.hair001Group64926_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64926_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64927_hair_m_0"
            geometry={nodes.hair001Group64927_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64927_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64928_hair_m_0"
            geometry={nodes.hair001Group64928_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64928_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64929_hair_m_0"
            geometry={nodes.hair001Group64929_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64929_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64930_hair_m_0"
            geometry={nodes.hair001Group64930_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64930_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64932_hair_m_0"
            geometry={nodes.hair001Group64932_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64932_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64933_hair_m_0"
            geometry={nodes.hair001Group64933_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64933_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64934_hair_m_0"
            geometry={nodes.hair001Group64934_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64934_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64935_hair_m_0"
            geometry={nodes.hair001Group64935_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64935_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64936_hair_m_0"
            geometry={nodes.hair001Group64936_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64936_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64937_hair_m_0"
            geometry={nodes.hair001Group64937_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64937_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64938_hair_m_0"
            geometry={nodes.hair001Group64938_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64938_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64939_hair_m_0"
            geometry={nodes.hair001Group64939_hair_m_0.geometry}
            material={materials["hair_m.004"]}
            skeleton={nodes.hair001Group64939_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64940_hair_m_0"
            geometry={nodes.hair001Group64940_hair_m_0.geometry}
            material={materials["hair_m.004"]}
            skeleton={nodes.hair001Group64940_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64942_hair_m_0"
            geometry={nodes.hair001Group64942_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64942_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64943_hair_m_0"
            geometry={nodes.hair001Group64943_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64943_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hair001Group64944_hair_m_0"
            geometry={nodes.hair001Group64944_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hair001Group64944_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="hairbottomGroup20003_hair_m_0"
            geometry={nodes.hairbottomGroup20003_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.hairbottomGroup20003_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="L_OJO_msh_eyesball_0"
            geometry={nodes.L_OJO_msh_eyesball_0.geometry}
            material={materials["eyesball.004"]}
            skeleton={nodes.L_OJO_msh_eyesball_0.skeleton}
          />
          <skinnedMesh
            name="pants_pants_m_0"
            geometry={nodes.pants_pants_m_0.geometry}
            material={materials["pants_m.004"]}
            skeleton={nodes.pants_pants_m_0.skeleton}
          />
          <skinnedMesh
            name="polySurface1_hair_m_0"
            geometry={nodes.polySurface1_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.polySurface1_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="polySurface2_hair_m_0"
            geometry={nodes.polySurface2_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.polySurface2_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="polySurface3_hair_m_0"
            geometry={nodes.polySurface3_hair_m_0.geometry}
            material={materials.hair_m}
            skeleton={nodes.polySurface3_hair_m_0.skeleton}
          />
          <skinnedMesh
            name="R_OJO_msh_eyesball_0"
            geometry={nodes.R_OJO_msh_eyesball_0.geometry}
            material={materials["eyesball.004"]}
            skeleton={nodes.R_OJO_msh_eyesball_0.skeleton}
          />
          <skinnedMesh
            name="shoes_aiStandardSurface1_0"
            geometry={nodes.shoes_aiStandardSurface1_0.geometry}
            material={materials.aiStandardSurface1}
            skeleton={nodes.shoes_aiStandardSurface1_0.skeleton}
          />
          <skinnedMesh
            name="shoes_aiStandardSurface3_0"
            geometry={nodes.shoes_aiStandardSurface3_0.geometry}
            material={materials.aiStandardSurface3}
            skeleton={nodes.shoes_aiStandardSurface3_0.skeleton}
          />
          <skinnedMesh
            name="tsirt_aiStandardSurface2_0"
            geometry={nodes.tsirt_aiStandardSurface2_0.geometry}
            material={materials.aiStandardSurface2}
            skeleton={nodes.tsirt_aiStandardSurface2_0.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/assets/models/Hijo/boyJonas.glb");
export default Jonas
